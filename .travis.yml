---
os: linux
dist: jammy
services:
  - docker
language: python
python:
  - '3.10'
before_install:
  - pip install --upgrade pip setuptools
branches:
  only:
    - main
    - Ka-kaldi
jobs:
  include:
    - name: Check YAML format
      install:
        - pip install tox
      script:
        - tox -e yamllint
    - name: pymarkdown
      install:
        - pip install tox
      script:
        - tox -e pymarkdown
    - name: flake8
      install:
        - pip install tox
      script:
        - tox -e flake8
    - name: Check Bash format
      install:
        - pip install tox
      script:
        - tox -e shellcheck
    - name: Docker Compose
      service:
        - docker
      script:
        # 試container配docker-compose辨識
        - git clone --depth 1 https://github.com/i3thuan5/ZuGi.git
        - docker-compose -f ZuGi/docker-compose.yml up -d --build nginx-proxy
        # 試container配docker-compose辨識
        - export ASR_VIRTUAL_HOST=localhost
        - export TTS_VIRTUAL_HOST=localhost2
        - export ASR_KALDI_VIRTUAL_HOST=localhost3p
        - docker-compose up -d --build
        - sleep 1m
        # 試反應時間
        - >
          EVENT_ID=`curl -X POST http://localhost/call/predict -s -H "Content-Type: application/json"
          -d '{
          "data": [
          "whisper-large-v2-all",
          "ami",
          {"path":"https://web.klokah.tw/text/sound/27713/460470.mp3"}
          ]
          }' | jq .event_id -r`
        - time curl -N "http://localhost/call/predict/${EVENT_ID}"
      after_failure:
        - docker-compose logs
    - stage: deploy
      name: deploy
      if: (type = push or type = cron) and (branch = main or branch = Ka-kaldi)
      install:
        - pip install ansible
      before_script:
        - mkdir -p "${HOME}/.ssh/"
        - TRAVIS_TSUKI_SSH_KEY_PATH="${HOME}/.ssh/id_ed25519_travis"
        - echo "${DEPLOY_HOST} ssh-ed25519 ${DEPLOY_HOST_SSH_PUBLICKEY}" >> ${HOME}/.ssh/known_hosts
        - echo "${DEPLOY_HOST_USER_SSH_KEY}" | base64 --decode > "${TRAVIS_TSUKI_SSH_KEY_PATH}"
        # Recreate the certificate from the secure environment variable
        - chmod 400 "${TRAVIS_TSUKI_SSH_KEY_PATH}"
      script:
        - >
          ansible-playbook -i deploy/inventory_travis deploy/deploy.yaml
          --extra-vars "tsuanan_repo=`basename ${TRAVIS_REPO_SLUG}`"
          --extra-vars "branch=${TRAVIS_BRANCH}"
          --extra-vars "DEPLOY_HOST=${DEPLOY_HOST}"
          --extra-vars "DEPLOY_HOST_USER=${DEPLOY_HOST_USER}"
          --extra-vars "TRAVIS_TSUKI_SSH_KEY_PATH=${TRAVIS_TSUKI_SSH_KEY_PATH}"
          --extra-vars "ASR_VIRTUAL_HOST=${ASR_VIRTUAL_HOST}"
          --extra-vars "ASR_KALDI_VIRTUAL_HOST=${ASR_KALDI_VIRTUAL_HOST}"
          --extra-vars "TTS_VIRTUAL_HOST=${TTS_VIRTUAL_HOST}"
          --extra-vars "SENTRY_DSN=${SENTRY_DSN}"
    - name: Online ASR Check
      script:
        - >
          EVENT_ID=`curl -X POST http://localhost/call/predict -s -H "Content-Type: application/json"
          -d '{
          "data": [
          "whisper-large-v2-all",
          "ami",
          {"path":"https://web.klokah.tw/text/sound/27713/460470.mp3"}
          ]
          }' | jq .event_id -r`
        - time curl -N "https://${ASR_VIRTUAL_HOST}/call/predict/${EVENT_ID}"
